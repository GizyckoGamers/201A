name: Upload binaries on release created

on:
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  GODOT_VERSION: 3.4.4
  EXPORT_NAME: 201A


jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.4.4
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: L00nix build
        run: |
          mkdir -v -p build/l00nix
          godot -v --export "Linux/X11" build/l00nix/201a_linux.x86_64
      - name: Windoza Build
        run: |
          mkdir -v -p build/windoza
          godot -v --export "Windows Desktop" build/windoza/201a_windoza.x86_64.exe


      - name: Set up JDK 1.8
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'microsoft'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
        env:
          ANDROID_SDK_ROOT: ~/Android/Sdk

      - name: Android Build
        run: |
          # Replace line for android sdk with our special script
          python replace_line.py ~/.config/godot/editor_settings-3.tres "export/android/android_sdk_path" "export/android/android_sdk_path = \"~/Android/Sdk\" ~/.config/godot/editor_settings-3.tres
          mkdir -v -p build/android
          mkdir -v secrets
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > secrets/debug.keystore
          godot -v --export "Android" build/android/201a_android.apk

      - name: Web Build
        run: |
          mkdir -v -p build/web
          godot -v --export "HTML5" build/web/index.html
          zip -r build/web/website.zip build/web/*
      - name: Mac Build
        run: |
          mkdir -v -p build/mac
          godot -v --export "Mac OSX" build/mac/201a_mac.zip
      - name: Get Latest Release
        uses: pozetroninc/github-action-get-latest-release@v0.5.0
        with:
          repository: ${{ github.repository }}
        id: latest-tag
      - name: Upload L00nix
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/l00nix/201a_linux.x86_64
          tag: ${{ steps.latest-tag.outputs.release }} 
      - name: Upload Windoza
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/windoza/201a_windoza.x86_64.exe
          tag: ${{ steps.latest-tag.outputs.release }}
      - name: Upload Android
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/android/201a_android.apk
          tag: ${{ steps.latest-tag.outputs.release }}
      - name: Upload Web
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/web/website.zip
          tag: ${{ steps.latest-tag.outputs.release }}
      - name: Upload Mac
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/mac/201a_mac.zip
          tag: ${{ steps.latest-tag.outputs.release }}
